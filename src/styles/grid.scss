@use 'sass:math';
@import './variables.scss';

/* Base variables */
$grid-columns-lg: 12; // Number of columns for large screens
$grid-sideMargin-lg: 80px;
$grid-gutter-lg: 40px;

$grid-columns-md: 12; // Number of columns for medium screens
$grid-sideMargin-md: 30px;
$grid-gutter-md: 30px;

$grid-columns-sm: 8; // Number of columns for small screens
$grid-sideMargin-sm: 20px;
$grid-gutter-sm: 0px;

/* Width converted to percents */
@function grid-width-to-percents($sideMargin, $width) {
  @return 100% - (math.div($sideMargin * 2, $width) * 100%);
}

$grid-width-lg: grid-width-to-percents($grid-sideMargin-lg, $screen-lg-min);
$grid-width-md: grid-width-to-percents($grid-sideMargin-md, $screen-md-min);
$grid-width-sm: grid-width-to-percents($grid-sideMargin-sm, $screen-sm-min);

/* Gutter converted to percents */
@function grid-gutter-to-percents($gutter, $width, $sideMargin) {
  @return math.div($gutter, ($width - ($sideMargin * 2))) * 100%;;
}

$gutter-lg: grid-gutter-to-percents($grid-gutter-lg, $screen-lg-min, $grid-sideMargin-lg);
$gutter-md: grid-gutter-to-percents($grid-gutter-md, $screen-md-min, $grid-sideMargin-md);
$gutter-sm: grid-gutter-to-percents($grid-gutter-sm, $screen-sm-min, $grid-sideMargin-sm);

/* Width of column based on it's index number */
@function get-col-width($i, $columns) {
  @return math.div(100%, $columns) * $i;
}

/* Shared column styles */
@mixin col-styles($i, $columns, $gutter) {
  box-sizing: border-box;
  width: get-col-width($i, $columns);
  padding-left: math.div($gutter, 2);
  padding-right: math.div($gutter, 2);
}

/* Generates $columns number of columns */
@mixin cols-loop($name, $columns, $gutter) {
  @for $i from 0 through $columns {
    &-#{$name}-#{$i} {
      @include col-styles($i, $columns, $gutter);
    }
    &-#{$name}-shift-#{$i} {
      margin-left: get-col-width($i, $columns);
    }
  }
}

/* Shared grid styles */
@mixin grid-base($width) {
  box-sizing: border-box;
  display: flex;
  margin-left: auto;
  margin-right: auto;
  flex-wrap: wrap;
  width: $width;
}

.grid {
  @include grid-base($grid-width-lg);
  @media screen and (min-width: $screen-md-min) {
    width: $grid-width-md;
  }
  @media screen and (min-width: $screen-sm-min) {
    width: $grid-width-sm;
  }
  &-0 {
    @include grid-base(100%);
  }
}

.col {
  @include cols-loop(lg, $grid-columns-lg, $gutter-lg);
  @media screen and (min-width: #{$screen-md-min}) and (max-width: #{$screen-md-max}) {
    @include cols-loop(md, $grid-columns-md, $gutter-md);
  }
  @media screen and (min-width: #{$screen-sm-min}) and (max-width: #{$screen-sm-max}) {
    @include cols-loop(sm, $grid-columns-sm, $gutter-sm);
  }
}
